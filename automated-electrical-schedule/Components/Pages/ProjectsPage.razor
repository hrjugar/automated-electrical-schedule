@page "/"
@using Microsoft.EntityFrameworkCore
@layout HomeLayout
@inject DatabaseContext DatabaseContext

<main class="projects-page">
    <header>
        <div class="projects-controls">
            <form @onsubmit="SearchProjects">
                <input placeholder="Search project..." @bind="_searchText"/>
            </form>
            <button class="btn-primary" @onclick="OpenModal">Add New Project</button>
        </div>
    </header>

    <div class="projects-list">
        @if (_projects.Count > 0)
        {
            @foreach (var project in _projects)
            {
                <a href="/project/@project.Id" class="project">
                    <h2>@project.ProjectName</h2>
                    <p>Last created @project.DateCreated.ToRelativeDateString()</p>
                </a>
            }
        }
        else
        {
            <div class="projects-list-empty">
                <p>No projects found.</p>
            </div>
        }
    </div>
</main>

@if (_isCreateProjectModalOpen)
{
    <CreateProjectModal @bind-IsOpen="@_isCreateProjectModalOpen"/>
}


@code {
    List<Project> _projects = [];
    string _searchText = "";

    private bool _isCreateProjectModalOpen;

    void OpenModal()
    {
        _isCreateProjectModalOpen = true;
    }

    protected override async Task OnInitializedAsync()
    {
        _projects = await DatabaseContext.Projects.ToListAsync();
        _projects.Reverse();
    }

    async Task SearchProjects()
    {
        _projects = await
            DatabaseContext.Projects
                .Where(p => p.ProjectName.Contains(_searchText))
                .ToListAsync();
    }

}
@using Microsoft.EntityFrameworkCore
@inject DatabaseContext DatabaseContext

<div class="board-table-card">
    @* <div class="board-table-card-header"> *@
    @*     <h6>Circuits</h6> *@
    @*     <button class="btn-primary text-sm">Add</button> *@
    @* </div> *@

    <div class="board-table">
        <div class="board-table-head">
            <p class="cell cell--text cell--sticky cell--sticky--left">No.</p>
            <p class="cell cell--text">Load Description</p>
            <p class="cell cell--text">Qty</p>
            <p class="cell cell--text">VA</p>
            <p class="cell cell--text">Voltage</p>
            <p class="cell cell--text">DF</p>
            <p class="cell cell--text">Ampere Load</p>

            <div class="cell cell--separator"></div>

            <div class="board-table-head-colgroup board-table-head-colgroup--circuit-protection">
                <p class="cell cell--text board-table-head-colgroup-title">Circuit Protection</p>

                <div class="board-table-head-colgroup-cols">
                    <p class="cell cell--text">AT</p>
                    <p class="cell cell--text">AF</p>
                    <p class="cell cell--text">Phase</p>
                    <p class="cell cell--text">Pole</p>
                    <p class="cell cell--text">Length</p>
                    <p class="cell cell--text">VD</p>
                    <p class="cell cell--text">Type</p>
                </div>
            </div>

            <div class="cell cell--separator"></div>

            <div class="board-table-head-colgroup board-table-head-colgroup--conductor-size">
                <p class="cell cell--text board-table-head-colgroup-title">Conductor Size</p>

                <div class="board-table-head-colgroup-cols">
                    <p class="cell cell--text cell--head">Sets</p>
                    <p class="cell cell--text cell--head">Phase+Neutral</p>
                    <p class="cell cell--text cell--head">Ground</p>
                    <p class="cell cell--text cell--head">Raceway</p>
                </div>
            </div>

            <div class="cell cell--separator"></div>

            <div class="cell cell--buttongroup cell--sticky cell--sticky--right"></div>
        </div>

        @if (_circuits.Count == 0)
        {
            <div class="board-table-empty">
                <p class="board-table-empty-text">This board has no circuits.</p>
            </div>
        }
        else
        {
            <div class="board-table-rows">
                @for (var i = 0; i <= _circuits.Count; i++)
                {
                    @* TODO: Update values here *@
                    <div class="board-table-row">
                        <p class="cell cell--text cell--sticky cell--sticky--left">@(i + 1)</p>
                        <p class="cell cell--text">Bedroom Lighting</p>
                        <p class="cell cell--text">10</p>
                        <p class="cell cell--text">1300</p>
                        <p class="cell cell--text">230</p>
                        <p class="cell cell--text">100%</p>
                        <p class="cell cell--text">5.6522</p>

                        <div class="cell cell--separator"></div>

                        <p class="cell cell--text">15</p>
                        <p class="cell cell--text">50</p>
                        <p class="cell cell--text">1</p>
                        <p class="cell cell--text">2</p>
                        <p class="cell cell--text">50</p>
                        <p class="cell cell--text">1.24%</p>
                        <p class="cell cell--text">MCB</p>

                        <div class="cell cell--separator"></div>

                        <p class="cell cell--text">1</p>
                        <p class="cell cell--text">2-2.0mm^2 THHN Cu</p>
                        <p class="cell cell--text">1-3.5mm^2 TW Cu</p>
                        <p class="cell cell--text">20mm PVC</p>

                        <div class="cell cell--separator"></div>

                        <div class="cell cell--buttongroup cell--sticky cell--sticky--right">
                            <button class="btn-secondary text-sm">
                                Edit
                            </button>

                            <button class="btn-destructive text-sm">Delete</button>
                        </div>
                    </div>
                }
            </div>
        }


        <div class="board-table-footer">
            <p class="cell cell--text cell--sticky cell--sticky--left">Total</p>
            <div class="cell cell--empty"></div>
            <p class="cell cell--text">10</p>
            <p class="cell cell--text">1300</p>
            <p class="cell cell--text">230</p>
            <div class="cell cell--empty"></div>
            <p class="cell cell--text">5.6522</p>

            <div class="cell cell--separator"></div>

            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>

            <div class="cell cell--separator"></div>

            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>
            <div class="cell cell--empty"></div>

            <div class="cell cell--separator"></div>

            <div class="cell cell--empty cell--sticky cell--sticky--right"></div>
        </div>
    </div>
</div>

@code {
    [Parameter] public DistributionBoard DistributionBoard { get; set; } = default!;

    List<Circuit> _circuits = [];
    
    protected override async Task OnInitializedAsync()
    {
        _circuits = await DatabaseContext.Circuits.ToListAsync();
    }

}
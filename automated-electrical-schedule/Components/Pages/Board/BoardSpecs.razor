<div class="board-specs">
    @{
        var threePhaseBoard = DistributionBoard as ThreePhaseDistributionBoard;
    }
    <div class="board-spec">
        <label>Phase</label>
        <h5>@DistributionBoard.Phase.GetDisplayName()</h5>
    </div>

    @if (threePhaseBoard != null)
    {
        <div class="board-spec">
            <label>Configuration</label>
            <h5>@threePhaseBoard.ThreePhaseConfiguration.GetDisplayName()</h5>
        </div>
    }

    @if (DistributionBoard.LineToLineVoltage != null)
    {
        <div class="board-spec">
            <label>Line-to-Line Voltage</label>
            <h5>
                @* TODO: Fix this later *@
                @* @(((LineToLineVoltage)DistributionBoard.LineToLineVoltage).GetDisplayName(ThreePhaseConfiguration.Delta)) *@
                @(DistributionBoard.LineToLineVoltageDisplay)
            </h5>
        </div>
    }

    <div class="board-spec">
        <label>Voltage</label>
        <h5>@DistributionBoard.Voltage.GetDisplayName()</h5>
    </div>

    @if (DistributionBoard.WireLength != null)
    {
        <div class="board-spec">
            <label>Wire Length</label>
            <h5>@DistributionBoard.WireLength</h5>
        </div>
    }

    @if (DistributionBoard.TransformerPrimaryProtection != null)
    {
        <div class="board-spec">
            <label>Transformer Primary Protection</label>
            <h5>@DistributionBoard.TransformerPrimaryProtection.GetDisplayName()</h5>
        </div>
    }

    @if (DistributionBoard.TransformerSecondaryProtection != null)
    {
        <div class="board-spec">
            <label>Transformer Secondary Protection</label>
            <h5>@DistributionBoard.TransformerSecondaryProtection.GetDisplayName()</h5>
        </div>
    }

    @if (DistributionBoard.BreakerCircuitProtection != null)
    {
        <div class="board-spec">
            <label>@($"{(int)DistributionBoard.ParentDistributionBoard!.Voltage}V") Circuit Protection</label>
            <h5>@DistributionBoard.BreakerCircuitProtection.GetDisplayName()</h5>
        </div>
    }

    @if (DistributionBoard.BreakerSetCount != null)
    {
        <div class="board-spec">
            <label>@($"{(int)DistributionBoard.ParentDistributionBoard!.Voltage}V") Number of Sets</label>
            <h5>@DistributionBoard.BreakerSetCount</h5>
        </div>
    }

    @if (DistributionBoard.BreakerConductorType != null)
    {
        <div class="board-spec">
            <label>@($"{(int)DistributionBoard.ParentDistributionBoard!.Voltage}V") Conductor Type</label>
            <h5>@DistributionBoard.BreakerConductorType.ToString()</h5>
        </div>
    }

    @if (DistributionBoard.BreakerGrounding != null)
    {
        <div class="board-spec">
            <label>@($"{(int)DistributionBoard.ParentDistributionBoard!.Voltage}V") Grounding</label>
            <h5>@DistributionBoard.BreakerGrounding.ToString()</h5>
        </div>
    }

    @if (DistributionBoard.BreakerRacewayType != null)
    {
        <div class="board-spec">
            <label>@($"{(int)DistributionBoard.ParentDistributionBoard!.Voltage}V") Raceway Type</label>
            <h5>@DistributionBoard.BreakerRacewayType.GetDisplayName()</h5>
        </div>
    }

    <div class="board-spec">
        <label>@(DistributionBoard?.BreakerCircuitProtection != null ? $"{(int)DistributionBoard.Voltage}V" : "") Circuit Protection</label>
        <h5>@DistributionBoard.CircuitProtection.GetDisplayName()</h5>
    </div>

    <div class="board-spec">
        <label>@(DistributionBoard?.BreakerSetCount != null ? $"{(int)DistributionBoard.Voltage}V" : "") Number of Sets</label>
        <h5>@DistributionBoard.SetCount</h5>
    </div>

    <div class="board-spec">
        <label>@(DistributionBoard?.BreakerConductorType != null ? $"{(int)DistributionBoard.Voltage}V" : "") Conductor Type</label>
        <h5>@DistributionBoard.ConductorType.ToString()</h5>
    </div>

    <div class="board-spec">
        <label>@(DistributionBoard?.BreakerGrounding != null ? $"{(int)DistributionBoard.Voltage}V" : "") Grounding</label>
        <h5>@DistributionBoard.Grounding.ToString()</h5>
    </div>

    <div class="board-spec">
        <label>@(DistributionBoard?.BreakerRacewayType != null ? $"{(int)DistributionBoard.Voltage}V" : "") Raceway Type</label>
        <h5>@DistributionBoard.RacewayType.GetDisplayName()</h5>
    </div>
</div>

@code {
    [Parameter] public DistributionBoard DistributionBoard { get; set; } = default!;
}